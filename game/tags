!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
) create_agents	service/watchdog.lua	/^	skynet.timeout(30000, function() create_agents(100) end)$/;"	f
AIBase:ctor	lualib/AI/AIBase.lua	/^function AIBase:ctor()$/;"	f
AIFsm:Init	lualib/AI/AIFsm.lua	/^function AIFsm:Init()$/;"	f
AIFsm:ctor	lualib/AI/AIFsm.lua	/^function AIFsm:ctor()$/;"	f
AIFsm:update	lualib/AI/AIFsm.lua	/^function AIFsm:update()$/;"	f
Affect:ctor	lualib/skill/Affects/Affect.lua	/^function Affect:ctor(entity,source,data)$/;"	f
Affect:onEnter	lualib/skill/Affects/Affect.lua	/^function Affect:onEnter()$/;"	f
Affect:onExec	lualib/skill/Affects/Affect.lua	/^function Affect:onExec()$/;"	f
Affect:onExit	lualib/skill/Affects/Affect.lua	/^function Affect:onExit()$/;"	f
AffectTable:addAffect	lualib/skill/Affects/AffectTable.lua	/^function AffectTable:addAffect(source,data)$/;"	f
AffectTable:buildAffects	lualib/skill/Affects/AffectTable.lua	/^function AffectTable:buildAffects(source,dataStr)$/;"	f
AffectTable:canControl	lualib/skill/Affects/AffectTable.lua	/^function AffectTable:canControl()$/;"	f
AffectTable:ctor	lualib/skill/Affects/AffectTable.lua	/^function AffectTable:ctor(entity)$/;"	f
AffectTable:update	lualib/skill/Affects/AffectTable.lua	/^function AffectTable:update(dt)$/;"	f
BLOCK_WEIGHT	lualib-src/pathfinding.c	9;"	d	file:
C	lualib-src/math3d.h	217;"	d
C	lualib-src/math3d.h	541;"	d
CFLAGS	Makefile	/^CFLAGS = -g -O2 -Wall -I$(LUA_INC) $(MYCFLAGS) $/;"	m
CJSON_INC	Makefile	/^CJSON_INC ?= ..\/skynet\/3rd\/lua$/;"	m
CJSON_ROOT	Makefile	/^CJSON_ROOT ?= $(THIRD_LIB_ROOT)lua-cjson-master$/;"	m
CMD.Start 	service/agent.lua	/^function CMD.Start (conf)$/;"	f
CMD.auth 	service/loginslave.lua	/^function CMD.auth (fd, addr)$/;"	f
CMD.castskill	service/room.lua	/^function CMD.castskill(response, playerId, args)$/;"	f
CMD.challenge 	service/loginserver.lua	/^function CMD.challenge (session, challenge)$/;"	f
CMD.close	service/watchdog.lua	/^function CMD.close(fd)$/;"	f
CMD.disconnect 	service/agent.lua	/^function CMD.disconnect ()$/;"	f
CMD.entity_enter	service/room.lua	/^function CMD.entity_enter(response, agent, playerId)$/;"	f
CMD.hijack_msg	service/room.lua	/^function CMD.hijack_msg(response)$/;"	f
CMD.init 	service/loginslave.lua	/^function CMD.init (m, id, conf)$/;"	f
CMD.move	service/room.lua	/^function CMD.move(response, playerId, args)$/;"	f
CMD.open 	service/loginserver.lua	/^function CMD.open (conf)$/;"	f
CMD.query_server_id	service/room.lua	/^function CMD.query_server_id(response, playerId, args)$/;"	f
CMD.save_session 	service/loginserver.lua	/^function CMD.save_session (account, key, challenge)$/;"	f
CMD.sendRequest 	service/agent.lua	/^function CMD.sendRequest (name, args)$/;"	f
CMD.start	service/watchdog.lua	/^function CMD.start(conf)$/;"	f
CMD.verify 	service/loginserver.lua	/^function CMD.verify (session, token)$/;"	f
EntityManager:createPlayer	lualib/entity/EntityManager.lua	/^function EntityManager:createPlayer(agent, playerId, serverId)$/;"	f
EntityManager:ctor	lualib/entity/EntityManager.lua	/^function EntityManager:ctor(p)$/;"	f
EntityManager:getEntity	lualib/entity/EntityManager.lua	/^function EntityManager:getEntity(serverId)$/;"	f
EntityManager:getPlayerByPlayerId	lualib/entity/EntityManager.lua	/^function EntityManager:getPlayerByPlayerId(playerId)$/;"	f
EntityManager:getSkillAttackEntitys	lualib/entity/EntityManager.lua	/^function EntityManager:getSkillAttackEntitys(source,skilldata)$/;"	f
EntityManager:update	lualib/entity/EntityManager.lua	/^function EntityManager:update(dt)$/;"	f
EventStampHandle.createHandleCoroutine	lualib/entity/EventStampHandle.lua	/^function EventStampHandle.createHandleCoroutine(serverId, event, response)$/;"	f
EventStampHandle[EventStampType.Affect] 	lualib/entity/EventStampHandle.lua	/^EventStampHandle[EventStampType.Affect] = function (serverId, event)$/;"	f
EventStampHandle[EventStampType.CastSkill] 	lualib/entity/EventStampHandle.lua	/^EventStampHandle[EventStampType.CastSkill] = function (serverId, event)$/;"	f
EventStampHandle[EventStampType.Hp_Mp] 	lualib/entity/EventStampHandle.lua	/^EventStampHandle[EventStampType.Hp_Mp] = function (serverId, event)$/;"	f
EventStampHandle[EventStampType.Move] 	lualib/entity/EventStampHandle.lua	/^EventStampHandle[EventStampType.Move] = function (serverId, event)$/;"	f
EventStampHandle[EventStampType.Stats] 	lualib/entity/EventStampHandle.lua	/^EventStampHandle[EventStampType.Stats] = function (serverId, event)$/;"	f
GRID_2_POS	lualib/base/util.lua	/^function GRID_2_POS(g)$/;"	f
HateList:ctor	lualib/AI/HateList.lua	/^function HateList:ctor(entity)$/;"	f
HateList:removeHate	lualib/AI/HateList.lua	/^function HateList:removeHate(entity)$/;"	f
HateList:update	lualib/AI/HateList.lua	/^function HateList:update(dt)$/;"	f
Hatelist:addHate	lualib/AI/HateList.lua	/^function Hatelist:addHate(entity,hateValue,hateTime)$/;"	f
IAgentPlayer.create	lualib/entity/IAgentPlayer.lua	/^function IAgentPlayer.create(...)$/;"	f
IAgentPlayer:ctor	lualib/entity/IAgentPlayer.lua	/^function IAgentPlayer:ctor(playerId)$/;"	f
IMapPlayer:calcStats	lualib/entity/IMapPlayer.lua	/^function IMapPlayer:calcStats()$/;"	f
IMapPlayer:ctor	lualib/entity/IMapPlayer.lua	/^function IMapPlayer:ctor()$/;"	f
IMapPlayer:init	lualib/entity/IMapPlayer.lua	/^function IMapPlayer:init()$/;"	f
IMapPlayer:update	lualib/entity/IMapPlayer.lua	/^function IMapPlayer:update(dt)$/;"	f
IS_SAME_GRID	lualib/base/util.lua	/^function IS_SAME_GRID(v1, v2)$/;"	f
Ientity:addHp	lualib/entity/Ientity.lua	/^function Ientity:addHp(_hp, mask)$/;"	f
Ientity:addMp	lualib/entity/Ientity.lua	/^function Ientity:addMp(_mp, mask)$/;"	f
Ientity:addSkillAffect	lualib/entity/Ientity.lua	/^function Ientity:addSkillAffect(tb)$/;"	f
Ientity:advanceEventStamp	lualib/entity/Ientity.lua	/^function Ientity:advanceEventStamp(event)$/;"	f
Ientity:calcASpeed	lualib/entity/Ientity.lua	/^function Ientity:calcASpeed()$/;"	f
Ientity:calcAttack	lualib/entity/Ientity.lua	/^function Ientity:calcAttack()$/;"	f
Ientity:calcAttackRange	lualib/entity/Ientity.lua	/^function Ientity:calcAttackRange()$/;"	f
Ientity:calcBaoji	lualib/entity/Ientity.lua	/^function Ientity:calcBaoji()$/;"	f
Ientity:calcDefence	lualib/entity/Ientity.lua	/^function Ientity:calcDefence()$/;"	f
Ientity:calcHit	lualib/entity/Ientity.lua	/^function Ientity:calcHit()$/;"	f
Ientity:calcHpMax	lualib/entity/Ientity.lua	/^function Ientity:calcHpMax()$/;"	f
Ientity:calcMSpeed	lualib/entity/Ientity.lua	/^function Ientity:calcMSpeed()$/;"	f
Ientity:calcMinjie	lualib/entity/Ientity.lua	/^function Ientity:calcMinjie()$/;"	f
Ientity:calcMiss	lualib/entity/Ientity.lua	/^function Ientity:calcMiss()$/;"	f
Ientity:calcMpMax	lualib/entity/Ientity.lua	/^function Ientity:calcMpMax()$/;"	f
Ientity:calcRecvHp	lualib/entity/Ientity.lua	/^function Ientity:calcRecvHp()$/;"	f
Ientity:calcRecvMp	lualib/entity/Ientity.lua	/^function Ientity:calcRecvMp()$/;"	f
Ientity:calcStrength	lualib/entity/Ientity.lua	/^function Ientity:calcStrength()$/;"	f
Ientity:calcZhili	lualib/entity/Ientity.lua	/^function Ientity:calcZhili()$/;"	f
Ientity:canCast	lualib/entity/Ientity.lua	/^function Ientity:canCast(skilldata,target,pos)$/;"	f
Ientity:castSkill	lualib/entity/Ientity.lua	/^function Ientity:castSkill(id)$/;"	f
Ientity:checkeventStamp	lualib/entity/Ientity.lua	/^function Ientity:checkeventStamp(event, stamp)$/;"	f
Ientity:ctor	lualib/entity/Ientity.lua	/^function Ientity:ctor()$/;"	f
Ientity:dumpMidStats	lualib/entity/Ientity.lua	/^function Ientity:dumpMidStats()$/;"	f
Ientity:dumpStats	lualib/entity/Ientity.lua	/^function Ientity:dumpStats()$/;"	f
Ientity:forcePosition	lualib/entity/Ientity.lua	/^function Ientity:forcePosition(des)$/;"	f
Ientity:getDistance	lualib/entity/Ientity.lua	/^function Ientity:getDistance(target)$/;"	f
Ientity:move	lualib/entity/Ientity.lua	/^function Ientity:move(dt)$/;"	f
Ientity:onRespClientEventStamp	lualib/entity/Ientity.lua	/^function Ientity:onRespClientEventStamp(event)$/;"	f
Ientity:recvHpMp	lualib/entity/Ientity.lua	/^function Ientity:recvHpMp()$/;"	f
Ientity:setState	lualib/entity/Ientity.lua	/^function Ientity:setState(state)$/;"	f
Ientity:setTargetPos	lualib/entity/Ientity.lua	/^function Ientity:setTargetPos(target)$/;"	f
Ientity:stand	lualib/entity/Ientity.lua	/^function Ientity:stand()$/;"	f
Ientity:update	lualib/entity/Ientity.lua	/^function Ientity:update(dt)$/;"	f
LUA_CLIB	Makefile	/^LUA_CLIB = cjson uuid pathfinding$/;"	m
LUA_CLIB_PATH	Makefile	/^LUA_CLIB_PATH ?= luaclib$/;"	m
LUA_INC	Makefile	/^LUA_INC ?= $(SKYNET_ROOT)3rd\/lua$/;"	m
LUA_LIB	Makefile	/^LUA_LIB ?= $(LUA_STATICLIB)$/;"	m
LUA_STATICLIB	Makefile	/^LUA_STATICLIB := $(SKYNET_ROOT)3rd\/lua\/liblua.a$/;"	m
MCSERVICE	Makefile	/^MCSERVICE = syslog$/;"	m
MCSERVICE_PATH	Makefile	/^MCSERVICE_PATH ?= cservice$/;"	m
Map:ctor	lualib/map/Map.lua	/^function Map:ctor()$/;"	f
Map:get	lualib/map/Map.lua	/^function Map:get(x, z)$/;"	f
Map:set	lualib/map/Map.lua	/^function Map:set(x, z, v)$/;"	f
NPCAI.Init	lualib/AI/NpcAI.lua	/^function NPCAI.Init()$/;"	f
NpcAI.ctor	lualib/AI/NpcAI.lua	/^function NpcAI.ctor(entity)$/;"	f
NpcAI:onEnter_Chase	lualib/AI/NpcAI.lua	/^function NpcAI:onEnter_Chase()$/;"	f
NpcAI:onEnter_Idle	lualib/AI/NpcAI.lua	/^function NpcAI:onEnter_Idle()$/;"	f
NpcAI:onExec_Chase	lualib/AI/NpcAI.lua	/^function NpcAI:onExec_Chase()$/;"	f
NpcAI:onExec_Idle	lualib/AI/NpcAI.lua	/^function NpcAI:onExec_Idle()$/;"	f
NpcAI:onExit_Chase	lualib/AI/NpcAI.lua	/^function NpcAI:onExit_Chase()$/;"	f
NpcAI:onExit_Idle	lualib/AI/NpcAI.lua	/^function NpcAI:onExit_Idle()$/;"	f
NpcAI:update	lualib/AI/NpcAI.lua	/^function NpcAI:update()$/;"	f
OFF	lualib-src/pathfinding.c	/^} OFF[8] = {$/;"	v	typeref:struct:__anon1	file:
P	lualib-src/pathfinding.c	/^	struct path *P;$/;"	m	struct:context	typeref:struct:context::path	file:
POS_2_GRID	lualib/base/util.lua	/^function POS_2_GRID(p)$/;"	f
REQUEST.CastSkill	lualib/agent/spell_handler.lua	/^function REQUEST.CastSkill(args)$/;"	f
REQUEST.character_create 	lualib/agent/character_handler.lua	/^function REQUEST.character_create (args)$/;"	f
REQUEST.character_list 	lualib/agent/character_handler.lua	/^function REQUEST.character_list ()$/;"	f
REQUEST.character_pick 	lualib/agent/character_handler.lua	/^function REQUEST.character_pick (args)$/;"	f
REQUEST.delat_time	lualib/agent/move_handler.lua	/^function REQUEST.delat_time()$/;"	f
REQUEST.heart_beat_time	lualib/agent/character_handler.lua	/^function REQUEST.heart_beat_time()$/;"	f
REQUEST.move 	lualib/agent/move_handler.lua	/^function REQUEST.move (args)$/;"	f
SEARCH_DEPTH	lualib-src/pathfinding.c	8;"	d	file:
SKYNET_BUILD_PATH	Makefile	/^SKYNET_BUILD_PATH ?= .$/;"	m
SKYNET_ROOT	Makefile	/^SKYNET_ROOT ?= $(THIRD_LIB_ROOT)skynet\/$/;"	m
SOCKET.close	service/watchdog.lua	/^function SOCKET.close(fd)$/;"	f
SOCKET.data	service/watchdog.lua	/^function SOCKET.data(fd, msg)$/;"	f
SOCKET.error	service/watchdog.lua	/^function SOCKET.error(fd, msg)$/;"	f
SOCKET.open	service/watchdog.lua	/^function SOCKET.open(fd, addr)$/;"	f
SOCKET.warning	service/watchdog.lua	/^function SOCKET.warning(fd, size)$/;"	f
StatsAffect:onEnter	lualib/skill/Affects/statsAffect.lua	/^function StatsAffect:onEnter()$/;"	f
StatsAffect:onExit	lualib/skill/Affects/statsAffect.lua	/^function StatsAffect:onExit()$/;"	f
THIRD_LIB_ROOT	Makefile	/^THIRD_LIB_ROOT ?= ..\/3rd\/$/;"	m
account.create 	lualib/db/account.lua	/^function account.create (id, name, password)$/;"	f
account.init 	lualib/db/account.lua	/^function account.init (ch)$/;"	f
account.load 	lualib/db/account.lua	/^function account.load (name)$/;"	f
add_closed	lualib-src/pathfinding.c	/^add_closed(struct context *ctx, int idx) {$/;"	f	file:
add_open	lualib-src/pathfinding.c	/^add_open(struct context *ctx, int x, int y, int camefrom, int gscore) {$/;"	f	file:
addbuilding	lualib-src/pathfinding.c	/^addbuilding(lua_State *L, struct map *m, int x, int y, int size) {$/;"	f	file:
addtarget	lualib-src/pathfinding.c	/^addtarget(lua_State *L, struct map *m, int x, int y, int size, int radius) {$/;"	f	file:
addwall	lualib-src/pathfinding.c	/^addwall(lua_State *L, struct map *m, int line, const char *wall, size_t width) {$/;"	f	file:
bit	lualib/base/util.lua	/^function bit(n)$/;"	f
bit_and	lualib/base/util.lua	/^function bit_and(a, b)$/;"	f
bit_not	lualib/base/util.lua	/^function bit_not(a)$/;"	f
bit_or	lualib/base/util.lua	/^function bit_or(a, b)$/;"	f
blinkAffect:ctor	lualib/skill/Affects/blinkAffect.lua	/^function blinkAffect:ctor(entity,source,data)$/;"	f
blinkAffect:onEnter	lualib/skill/Affects/blinkAffect.lua	/^function blinkAffect:onEnter()$/;"	f
blinkAffect:onExec	lualib/skill/Affects/blinkAffect.lua	/^function blinkAffect:onExec(dt)$/;"	f
blinkAffect:onExit	lualib/skill/Affects/blinkAffect.lua	/^function blinkAffect:onExit()$/;"	f
c	lualib-src/math3d.h	/^	float c[4][4];$/;"	m	union:matrix44
camefrom	lualib-src/pathfinding.c	/^	int camefrom;$/;"	m	struct:pathnode	file:
cb	service-src/service_syslog.c	/^cb (struct skynet_context *ctx, void *ud, int type, int session, uint32_t source, const void *msg, size_t sz) {$/;"	f	file:
check_msg	service-src/service_syslog.c	/^check_msg (const char *msg, size_t sz, int *priority) {$/;"	f	file:
check_position	lualib-src/pathfinding.c	/^check_position(lua_State *L, struct map *m, int x, int y) {$/;"	f	file:
class	lualib/base/luaext.lua	/^function class(classname, super)$/;"	f
clean 	lualib/agent/handler.lua	/^local function clean (dest, t)$/;"	f
close 	service/loginslave.lua	/^local function close (fd)$/;"	f
close_agent	service/watchdog.lua	/^local function close_agent(fd)$/;"	f
close_path	lualib-src/pathfinding.c	/^close_path(struct path *P) {$/;"	f	file:
closed	lualib-src/pathfinding.c	/^	int closed;$/;"	m	struct:context	file:
cls 	lualib/base/luaext.lua	/^            cls = {ctor = function() end}$/;"	f
cls.ctor 	lualib/base/luaext.lua	/^            cls.ctor = function() end$/;"	f
cls.new	lualib/base/luaext.lua	/^        function cls.new(...)$/;"	f
connection_handler 	service/database.lua	/^function connection_handler (key)$/;"	f
context	lualib-src/pathfinding.c	/^struct context {$/;"	s	file:
convert_route	lualib-src/pathfinding.c	/^convert_route(int *route, struct map *m) {$/;"	f	file:
cooldown:addItem	lualib/skill/cooldown.lua	/^function cooldown:addItem(skillid,cd)$/;"	f
cooldown:ctor	lualib/skill/cooldown.lua	/^function cooldown:ctor(entity)$/;"	f
cooldown:getCdTime	lualib/skill/cooldown.lua	/^function cooldown:getCdTime(id)$/;"	f
cooldown:resetCd	lualib/skill/cooldown.lua	/^function cooldown:resetCd(id,time)$/;"	f
cooldown:update	lualib/skill/cooldown.lua	/^function cooldown:update(dt)$/;"	f
create_agents	service/watchdog.lua	/^local function create_agents(num)	$/;"	f
create_character 	lualib/agent/character_handler.lua	/^local function create_character (name, race, class)$/;"	f
create_queue	lualib-src/pathfinding.c	/^create_queue(int n) {$/;"	f	file:
demageAffect:calDemage	lualib/skill/Affects/demageAffect.lua	/^function demageAffect:calDemage()$/;"	f
demageAffect:ctor	lualib/skill/Affects/demageAffect.lua	/^function demageAffect:ctor(entity,source,data)$/;"	f
demageAffect:onEnter	lualib/skill/Affects/demageAffect.lua	/^function demageAffect:onEnter()$/;"	f
demageAffect:onExec	lualib/skill/Affects/demageAffect.lua	/^function demageAffect:onExec(dt)$/;"	f
demageAffect:onExit	lualib/skill/Affects/demageAffect.lua	/^function demageAffect:onExit()$/;"	f
depth	lualib-src/pathfinding.c	/^	int depth;$/;"	m	struct:path	file:
dispatch 	service/agent.lua	/^	dispatch = function (_, _, type, ...)$/;"	f
dist	lualib-src/math3d.h	/^	float dist;$/;"	m	struct:plane
distance	lualib-src/pathfinding.c	/^	int distance;$/;"	m	struct:__anon1	file:
distance	lualib-src/pathfinding.c	/^distance(int x1, int y1, int x2, int y2) {$/;"	f	file:
dizzyAffect:ctor	lualib/skill/Affects/dizzyAffect.lua	/^function dizzyAffect:ctor( entity,source,data )$/;"	f
dizzyAffect:onEnter	lualib/skill/Affects/dizzyAffect.lua	/^function dizzyAffect:onEnter()$/;"	f
dizzyAffect:onExec	lualib/skill/Affects/dizzyAffect.lua	/^function dizzyAffect:onExec(dt)$/;"	f
dizzyAffect:onExit	lualib/skill/Affects/dizzyAffect.lua	/^function dizzyAffect:onExit()$/;"	f
dump	lualib/base/luaext.lua	/^local function dump(obj)$/;"	f
dumpObj 	lualib/base/luaext.lua	/^    dumpObj = function(obj, level)$/;"	f
dx	lualib-src/pathfinding.c	/^	int dx;$/;"	m	struct:__anon1	file:
dy	lualib-src/pathfinding.c	/^	int dy;$/;"	m	struct:__anon1	file:
ejoy3d_math_h	lualib-src/math3d.h	4;"	d
end_x	lualib-src/pathfinding.c	/^	int end_x;$/;"	m	struct:context	file:
end_y	lualib-src/pathfinding.c	/^	int end_y;$/;"	m	struct:context	file:
enter_queue	lualib-src/pathfinding.c	/^enter_queue(struct route_queue *q, int x, int y) {$/;"	f	file:
find_open	lualib-src/pathfinding.c	/^find_open(struct context *ctx, int x, int y) {$/;"	f	file:
flyAffect:ctor	lualib/skill/Affects/flyAffect.lua	/^function flyAffect:ctor(owner,source,data)$/;"	f
fscore	lualib-src/pathfinding.c	/^	int fscore;$/;"	m	struct:pathnode	file:
gen_route	lualib-src/pathfinding.c	/^gen_route(struct map *m, int *route, struct route_queue *q) {$/;"	f	file:
getIndent 	lualib/base/luaext.lua	/^    getIndent = function(level)$/;"	f
getfield	lualib-src/pathfinding.c	/^getfield(lua_State *L, int index, const char *f) {$/;"	f	file:
gscore	lualib-src/pathfinding.c	/^	int gscore;$/;"	m	struct:pathnode	file:
handle_request 	service/agent.lua	/^local function handle_request (name, args, response)$/;"	f
handle_response 	service/agent.lua	/^local function handle_response (id, args)$/;"	f
handler.new 	lualib/agent/handler.lua	/^function handler.new (request, response, cmd)$/;"	f
handler:init 	lualib/agent/handler.lua	/^function handler:init (f)$/;"	f
handler:register 	lualib/agent/handler.lua	/^function handler:register (user)$/;"	f
handler:unregister 	lualib/agent/handler.lua	/^function handler:unregister (user)$/;"	f
hash_num 	service/database.lua	/^local function hash_num (num)$/;"	f
hash_str 	service/database.lua	/^local function hash_str (str)$/;"	f
head	lualib-src/pathfinding.c	/^	int head;$/;"	m	struct:route_queue	file:
heartbeat_check 	service/agent.lua	/^local function heartbeat_check ()$/;"	f
height	lualib-src/pathfinding.c	/^	int height;$/;"	m	struct:map	file:
if superType 	lualib/base/luaext.lua	/^    if superType == "function" or (super and super.__ctype == 1) then$/;"	f
if superType ~	lualib/base/luaext.lua	/^    if superType ~= "function" and superType ~= "table" then$/;"	f
if type(v) 	service/room.lua	/^		if type(v) == "function" then$/;"	f
in_closed	lualib-src/pathfinding.c	/^in_closed(struct context *ctx, int x, int y) {$/;"	f	file:
init	service/room.lua	/^local function init()$/;"	f
init_route	lualib-src/pathfinding.c	/^init_route(struct map * block, struct map *m, int *route, struct route_queue *q) {$/;"	f	file:
intersection_rayAABB	lualib-src/math3d.h	/^intersection_rayAABB(const struct vector3 *rayOrig, const struct vector3 *rayDir, $/;"	f
intersection_raytriangle	lualib-src/math3d.h	/^intersection_raytriangle(const struct vector3 *rayOrig, const struct vector3 *rayDir,$/;"	f
invincibleAffect:ctor	lualib/skill/Affects/invincibleAffect.lua	/^function invincibleAffect:ctor(entity,source,data)$/;"	f
invincibleAffect:onEnter	lualib/skill/Affects/invincibleAffect.lua	/^function invincibleAffect:onEnter()$/;"	f
invincibleAffect:onExec	lualib/skill/Affects/invincibleAffect.lua	/^function invincibleAffect:onExec(dt)$/;"	f
invincibleAffect:onExit	lualib/skill/Affects/invincibleAffect.lua	/^function invincibleAffect:onExit()$/;"	f
iskindof	lualib/base/luaext.lua	/^function iskindof(obj, classname)$/;"	f
kick_self 	service/agent.lua	/^local function kick_self ()$/;"	f
laddbuilding	lualib-src/pathfinding.c	/^laddbuilding(lua_State *L)$/;"	f	file:
lblock	lualib-src/pathfinding.c	/^lblock(lua_State *L) {$/;"	f	file:
lclear	lualib-src/pathfinding.c	/^lclear(lua_State *L)$/;"	f	file:
leave_queue	lualib-src/pathfinding.c	/^leave_queue(struct route_queue *q) {$/;"	f	file:
lflowgraph	lualib-src/pathfinding.c	/^lflowgraph(lua_State *L) {$/;"	f	file:
lnewmap	lualib-src/pathfinding.c	/^lnewmap(lua_State *L) {$/;"	f	file:
loader.init 	lualib/proto/protoloader.lua	/^function loader.init ()$/;"	f
loader.load 	lualib/proto/protoloader.lua	/^function loader.load (index)$/;"	f
local co 	lualib/entity/EventStampHandle.lua	/^		local co = coroutine.create(function(...)$/;"	f
lowest_fscore	lualib-src/pathfinding.c	/^lowest_fscore(struct context *ctx) {$/;"	f	file:
lpath	lualib-src/pathfinding.c	/^lpath(lua_State *L) {$/;"	f	file:
lremovebuliding	lualib-src/pathfinding.c	/^lremovebuliding(lua_State *L)$/;"	f	file:
lsid	lualib-src/lua-uuid.c	/^lsid (lua_State *L) {$/;"	f	file:
luaopen_pathfinding	lualib-src/pathfinding.c	/^luaopen_pathfinding(lua_State *L) {$/;"	f
luaopen_uuid_core	lualib-src/lua-uuid.c	/^luaopen_uuid_core (lua_State *L) {$/;"	f
m	lualib-src/pathfinding.c	/^	uint8_t m[0];$/;"	m	struct:map	file:
mClamp	lualib/base/util.lua	/^function mClamp(a, min, max)$/;"	f
make_key 	lualib/db/account.lua	/^local function make_key (name)$/;"	f
map	lualib-src/pathfinding.c	/^struct map {$/;"	s	file:
map_get	lualib-src/pathfinding.c	/^map_get(struct map *m, int x, int y) {$/;"	f	file:
map_set	lualib-src/pathfinding.c	/^map_set(struct map *m, int x, int y, int w) {$/;"	f	file:
math.floor 	lualib/base/luaext.lua	/^	math.floor = function(n, p)$/;"	f
math.round 	lualib/base/luaext.lua	/^math.round = function(n, p)$/;"	f
matrix44	lualib-src/math3d.h	/^union matrix44 {$/;"	u
matrix44_decompose	lualib-src/math3d.h	/^matrix44_decompose(const union matrix44 *m, struct vector3 *trans, struct vector3 *rot, struct vector3 *scale ) {$/;"	f
matrix44_determinant	lualib-src/math3d.h	/^matrix44_determinant(const union matrix44 *m) {$/;"	f
matrix44_fastmul43	lualib-src/math3d.h	/^matrix44_fastmul43(union matrix44 *m, const union matrix44 *m1, const union matrix44 *m2) {$/;"	f
matrix44_from_quaternion	lualib-src/math3d.h	/^matrix44_from_quaternion(union matrix44 *m, const struct quaternion *q) {$/;"	f
matrix44_getscale	lualib-src/math3d.h	/^matrix44_getscale(const union matrix44 *m, struct vector3 *scale) {$/;"	f
matrix44_gettrans	lualib-src/math3d.h	/^matrix44_gettrans(const union matrix44 *m, struct vector3 *trans) {$/;"	f
matrix44_identity	lualib-src/math3d.h	/^matrix44_identity(union matrix44 * m) {$/;"	f
matrix44_inverted	lualib-src/math3d.h	/^matrix44_inverted(union matrix44 *dst, const union matrix44 *m) {$/;"	f
matrix44_mul	lualib-src/math3d.h	/^matrix44_mul(union matrix44 *m, const union matrix44 *m1, const union matrix44 *m2) {$/;"	f
matrix44_ortho	lualib-src/math3d.h	/^matrix44_ortho(union matrix44 *m, float l, float r, float b, float t, float n, float f ) {$/;"	f
matrix44_perspective	lualib-src/math3d.h	/^matrix44_perspective(union matrix44 *m, float l, float r, float b, float t, float n, float f) {$/;"	f
matrix44_rot	lualib-src/math3d.h	/^matrix44_rot(union matrix44 *m, float x, float y, float z) {$/;"	f
matrix44_rot_axis	lualib-src/math3d.h	/^matrix44_rot_axis(union matrix44 *m, const struct vector3 *axis, float angle) {$/;"	f
matrix44_scale	lualib-src/math3d.h	/^matrix44_scale(union matrix44 *m, float x, float y, float z) {$/;"	f
matrix44_trans	lualib-src/math3d.h	/^matrix44_trans(union matrix44 *m, float x, float y, float z) {$/;"	f
matrix44_transposed	lualib-src/math3d.h	/^matrix44_transposed(union matrix44 *m) {$/;"	f
merge 	lualib/agent/handler.lua	/^local function merge (dest, t)$/;"	f
module_init 	service/database.lua	/^local function module_init (name, mod)$/;"	f
mt.__index 	lualib/base/luaext.lua	/^    mt.__index = function (s, ...)$/;"	f
n	lualib-src/pathfinding.c	/^	int n;$/;"	m	struct:context	file:
n	lualib-src/pathfinding.c	/^	int n;$/;"	m	struct:route_queue	file:
n	lualib-src/pathfinding.c	/^	struct pathnode *n;$/;"	m	struct:path	typeref:struct:path::pathnode	file:
nearest	lualib-src/pathfinding.c	/^nearest(struct path *P, int from, int to) {$/;"	f	file:
new_flowgraph	lualib-src/pathfinding.c	/^new_flowgraph(lua_State *L, struct map *m, int index) {$/;"	f
normal	lualib-src/math3d.h	/^	struct vector3 normal;$/;"	m	struct:plane	typeref:struct:plane::vector3
open	lualib-src/pathfinding.c	/^	int open;$/;"	m	struct:context	file:
path	lualib-src/pathfinding.c	/^struct path {$/;"	s	file:
path_finding	lualib-src/pathfinding.c	/^path_finding(struct map *m, struct path *P, int start_x, int start_y, int end_x, int end_y) {$/;"	f	file:
pathnode	lualib-src/pathfinding.c	/^struct pathnode {$/;"	s	file:
plane	lualib-src/math3d.h	/^struct plane {$/;"	s
plane_dist	lualib-src/math3d.h	/^plane_dist(const struct plane *p, const struct vector3 *v) {$/;"	f
plane_init	lualib-src/math3d.h	/^plane_init(struct plane *p, const struct vector3 *normal, float d ) {$/;"	f
plane_init_dot3	lualib-src/math3d.h	/^plane_init_dot3(struct plane *p, const struct vector3 *v0, const struct vector3 *v1, const struct vector3 *v2) {$/;"	f
pret 	service/loginslave.lua	/^		local function pret (ok, ...)$/;"	f
q	lualib-src/pathfinding.c	/^	struct route_coord q[0];$/;"	m	struct:route_queue	typeref:struct:route_queue::route_coord	file:
quaternion	lualib-src/math3d.h	/^struct quaternion {$/;"	s
quaternion_init	lualib-src/math3d.h	/^quaternion_init(struct quaternion *q, float x, float y, float z) {$/;"	f
quaternion_inverted	lualib-src/math3d.h	/^quaternion_inverted(struct quaternion * q) {$/;"	f
quaternion_mul	lualib-src/math3d.h	/^quaternion_mul(struct quaternion *q, const struct quaternion *a, const struct quaternion *b) {$/;"	f
quaternion_nslerp	lualib-src/math3d.h	/^quaternion_nslerp(struct quaternion *q, const struct quaternion *a, const struct quaternion *b, float t) {$/;"	f
quaternion_slerp	lualib-src/math3d.h	/^quaternion_slerp(struct quaternion *q, const struct quaternion *a, const struct quaternion *b, float t) {$/;"	f
query_event_func	service/room.lua	/^local function query_event_func(response, playerId, args)$/;"	f
queue_exist	lualib-src/pathfinding.c	/^queue_exist(struct route_queue *q, int x, int y) {$/;"	f	file:
quoteStr 	lualib/base/luaext.lua	/^    quoteStr = function(str)$/;"	f
read 	service/loginslave.lua	/^local function read (fd, size)$/;"	f
read_msg 	service/loginslave.lua	/^local function read_msg (fd)$/;"	f
recoverAffect:calRecover	lualib/skill/Affects/recoverAffect.lua	/^function recoverAffect:calRecover()$/;"	f
recoverAffect:ctor	lualib/skill/Affects/recoverAffect.lua	/^function recoverAffect:ctor(entity,source,data)$/;"	f
recoverAffect:onEnter	lualib/skill/Affects/recoverAffect.lua	/^function recoverAffect:onEnter()$/;"	f
recoverAffect:onExec	lualib/skill/Affects/recoverAffect.lua	/^function recoverAffect:onExec(dt)$/;"	f
recoverAffect:onExit	lualib/skill/Affects/recoverAffect.lua	/^function recoverAffect:onExit()$/;"	f
register_class_var	lualib/base/util.lua	/^function register_class_var(t, name, iv)$/;"	f
register_query_event_func	service/room.lua	/^local function register_query_event_func()$/;"	f
register_stats	lualib/entity/Ientity.lua	/^local function register_stats(t, name)$/;"	f
removebuliding	lualib-src/pathfinding.c	/^removebuliding(lua_State *L,struct map* m,int x,int y,int size)$/;"	f	file:
repelAffect:ctor	lualib/skill/Affects/repelAffect.lua	/^function repelAffect:ctor(entity,source,data)$/;"	f
repelAffect:onEnter	lualib/skill/Affects/repelAffect.lua	/^function repelAffect:onEnter()$/;"	f
repelAffect:onExec	lualib/skill/Affects/repelAffect.lua	/^function repelAffect:onExec(dt)$/;"	f
repelAffect:onExit	lualib/skill/Affects/repelAffect.lua	/^function repelAffect:onExit()$/;"	f
request_hijack_msg	service/agent.lua	/^local function request_hijack_msg(handle)$/;"	f
respClientEventStamp	lualib/entity/EventStampHandle.lua	/^function respClientEventStamp(co, serverId, event)$/;"	f
ret 	service/database.lua	/^		local function ret (ok, ...)$/;"	f
route_coord	lualib-src/pathfinding.c	/^struct route_coord {$/;"	s	file:
route_queue	lualib-src/pathfinding.c	/^struct route_queue {$/;"	s	file:
send_msg 	lualib/base/util.lua	/^function send_msg (fd, msg)$/;"	f
send_msg 	service/loginslave.lua	/^local function send_msg (fd, msg)$/;"	f
send_request 	service/agent.lua	/^local function send_request (name, args)$/;"	f
set	lualib-src/pathfinding.c	/^	int *set;$/;"	m	struct:path	file:
sid	lualib-src/lua-uuid.c	/^static uint32_t sid;$/;"	v	file:
spell:Cast	lualib/skill/spell.lua	/^function spell:Cast(skillid,target,pos)$/;"	f
spell:advanceEffect	lualib/skill/spell.lua	/^function spell:advanceEffect(dt)$/;"	f
spell:breakSpell	lualib/skill/spell.lua	/^function spell:breakSpell()$/;"	f
spell:canBreak	lualib/skill/spell.lua	/^function spell:canBreak(ms)$/;"	f
spell:clear	lualib/skill/spell.lua	/^function spell:clear()$/;"	f
spell:ctor	lualib/skill/spell.lua	/^function spell:ctor(entity)$/;"	f
spell:init	lualib/skill/spell.lua	/^function spell:init(skilldata,skillTimes)$/;"	f
spell:isSpellRunning	lualib/skill/spell.lua	/^function spell:isSpellRunning()$/;"	f
spell:onBegin	lualib/skill/spell.lua	/^function spell:onBegin()$/;"	f
spell:onCast	lualib/skill/spell.lua	/^function spell:onCast()$/;"	f
spell:onEnd	lualib/skill/spell.lua	/^function spell:onEnd()$/;"	f
spell:onReady	lualib/skill/spell.lua	/^function spell:onReady()$/;"	f
spell:trgggerAffect	lualib/skill/spell.lua	/^function spell:trgggerAffect(datastr,targets)$/;"	f
spell:update	lualib/skill/spell.lua	/^function spell:update(dt)$/;"	f
string.ltrim 	lualib/base/luaext.lua	/^string.ltrim = function(s, c)$/;"	f
string.rtrim 	lualib/base/luaext.lua	/^string.rtrim = function(s, c)$/;"	f
string.split 	lualib/base/luaext.lua	/^string.split = function(s, delim)$/;"	f
string.trim 	lualib/base/luaext.lua	/^string.trim = function(s, c)$/;"	f
syslog.debug 	lualib/base/syslog.lua	/^function syslog.debug (...)$/;"	f
syslog.debugf 	lualib/base/syslog.lua	/^function syslog.debugf (...)$/;"	f
syslog.err 	lualib/base/syslog.lua	/^function syslog.err (...)$/;"	f
syslog.errf 	lualib/base/syslog.lua	/^function syslog.errf (...)$/;"	f
syslog.info 	lualib/base/syslog.lua	/^function syslog.info (...)$/;"	f
syslog.infof 	lualib/base/syslog.lua	/^function syslog.infof (...)$/;"	f
syslog.level 	lualib/base/syslog.lua	/^function syslog.level (lv)$/;"	f
syslog.notice 	lualib/base/syslog.lua	/^function syslog.notice (...)$/;"	f
syslog.noticef 	lualib/base/syslog.lua	/^function syslog.noticef (...)$/;"	f
syslog.warning 	lualib/base/syslog.lua	/^function syslog.warning (...)$/;"	f
syslog.warningf 	lualib/base/syslog.lua	/^function syslog.warningf (...)$/;"	f
syslog_init	service-src/service_syslog.c	/^syslog_init (void *inst, struct skynet_context *ctx, const char *ident) {$/;"	f
t['addMid' .. name] 	lualib/entity/Ientity.lua	/^	t['addMid' .. name] = function(self, v)$/;"	f
t['get' .. name] 	lualib/entity/Ientity.lua	/^	t['get' .. name] = function(self)$/;"	f
t['get'..name] 	lualib/base/util.lua	/^	t['get'..name] = function(self)$/;"	f
t['getMid'..name] 	lualib/entity/Ientity.lua	/^	t['getMid'..name] = function(self)$/;"	f
t['set' .. name] 	lualib/entity/Ientity.lua	/^	t['set' .. name] = function (self, v)$/;"	f
t['set'..name] 	lualib/base/util.lua	/^	t['set'..name] = function(self, v)$/;"	f
table.calCross	lualib/base/luaext.lua	/^function table.calCross(tab1,tb2)$/;"	f
table.clone 	lualib/base/luaext.lua	/^table.clone = function(t, nometa)$/;"	f
table.containKey	lualib/base/luaext.lua	/^function table.containKey( t, key )$/;"	f
table.copy 	lualib/base/luaext.lua	/^table.copy = function(t, nometa)   $/;"	f
table.empty 	lualib/base/luaext.lua	/^table.empty = function(t)$/;"	f
table.indices 	lualib/base/luaext.lua	/^table.indices = function(t)$/;"	f
table.merge 	lualib/base/luaext.lua	/^table.merge = function(dest, src)$/;"	f
table.size 	lualib/base/luaext.lua	/^table.size = function(t)$/;"	f
table.values 	lualib/base/luaext.lua	/^table.values = function(t)$/;"	f
tail	lualib-src/pathfinding.c	/^	int tail;$/;"	m	struct:route_queue	file:
target_init	lualib-src/pathfinding.c	/^target_init(struct map *m, int x, int y) {$/;"	f	file:
terrain:addEntity	lualib/entity/terrain.lua	/^function terrain:addEntity(entity)$/;"	f
terrain:clear	lualib/entity/terrain.lua	/^function terrain:clear()$/;"	f
terrain:ctor	lualib/entity/terrain.lua	/^function terrain:ctor()$/;"	f
terrain:removeEntity	lualib/entity/terrain.lua	/^function terrain:removeEntity(entity)$/;"	f
terrain:update	lualib/entity/terrain.lua	/^function terrain:update(dt)$/;"	f
timeout	service/watchdog.lua	/^local function timeout(t)$/;"	f
tostring 	lualib/base/luaext.lua	/^    tostring = function(v)$/;"	f
unpack 	service/agent.lua	/^	unpack = function (msg, sz)$/;"	f
updateMapEvent	service/room.lua	/^local function updateMapEvent()$/;"	f
uuid.gen 	lualib/base/uuid.lua	/^function uuid.gen ()$/;"	f
uuid.split 	lualib/base/uuid.lua	/^function uuid.split (id)$/;"	f
v) table.insert	lualib/base/luaext.lua	/^    string.gsub(s, pattern, function(v) table.insert(split, v) end)$/;"	f
vector3	lualib-src/math3d.h	/^struct vector3 {$/;"	s
vector3.create	lualib/base/vector3.lua	/^function vector3.create(x, y, z)$/;"	f
vector3.cross	lualib/base/vector3.lua	/^function vector3.cross(a, b)$/;"	f
vector3.cross	lualib/math/vector3.lua	/^function vector3.cross(a, b)$/;"	f
vector3.dot	lualib/base/vector3.lua	/^function vector3.dot(a, b)$/;"	f
vector3.dot	lualib/math/vector3.lua	/^function vector3.dot(a, b)$/;"	f
vector3:add	lualib/base/vector3.lua	/^function vector3:add(v)$/;"	f
vector3:create	lualib/math/vector3.lua	/^function vector3:create(x, y, z, o)$/;"	f
vector3:length	lualib/base/vector3.lua	/^function vector3:length()$/;"	f
vector3:length_square	lualib/base/vector3.lua	/^function vector3:length_square()$/;"	f
vector3:mul_num	lualib/base/vector3.lua	/^function vector3:mul_num(num)$/;"	f
vector3:normalize	lualib/base/vector3.lua	/^function vector3:normalize(n)$/;"	f
vector3:return_add	lualib/base/vector3.lua	/^function vector3:return_add(v)$/;"	f
vector3:return_mul_num	lualib/base/vector3.lua	/^function vector3:return_mul_num(num)$/;"	f
vector3:return_sub	lualib/base/vector3.lua	/^function vector3:return_sub(v)$/;"	f
vector3:set	lualib/base/vector3.lua	/^function vector3:set(x, y ,z)$/;"	f
vector3:set	lualib/math/vector3.lua	/^function vector3:set(x, y, z)$/;"	f
vector3:sub	lualib/base/vector3.lua	/^function vector3:sub(v)$/;"	f
vector3_array	lualib-src/math3d.h	/^vector3_array(struct vector3 *v) {$/;"	f
vector3_cross	lualib-src/math3d.h	/^vector3_cross(struct vector3 *v, const struct vector3 *a, const struct vector3 *b) {$/;"	f
vector3_distAABB	lualib-src/math3d.h	/^vector3_distAABB(const struct vector3 *pos, const struct vector3 *mins, const struct vector3 *maxs ) {$/;"	f
vector3_dot	lualib-src/math3d.h	/^vector3_dot(const struct vector3 *a, const struct vector3 *b) {$/;"	f
vector3_length	lualib-src/math3d.h	/^vector3_length(const struct vector3 *v) {$/;"	f
vector3_length	lualib/base/vector3.lua	/^local function vector3_length(v)$/;"	f
vector3_lerp	lualib-src/math3d.h	/^vector3_lerp(struct vector3 *v, const struct vector3 *a, const struct vector3 *b, float f) {$/;"	f
vector3_mul	lualib-src/math3d.h	/^vector3_mul(struct vector3 *v, const union matrix44 *m) {$/;"	f
vector3_mul33	lualib-src/math3d.h	/^vector3_mul33(struct vector3 *v, const union matrix44 *m) {$/;"	f
vector3_normalize	lualib-src/math3d.h	/^vector3_normalize(struct vector3 *v) {$/;"	f
vector3_to_rotation	lualib-src/math3d.h	/^vector3_to_rotation(struct vector3 *v, const struct vector3 *r) {$/;"	f
vector3_vector	lualib-src/math3d.h	/^vector3_vector(struct vector3 *v, const struct vector3 *p1, const struct vector3 *p2) {$/;"	f
vector4	lualib-src/math3d.h	/^struct vector4 {$/;"	s
vector4_array	lualib-src/math3d.h	/^vector4_array(struct vector4 *v) {$/;"	f
vector4_mul	lualib-src/math3d.h	/^vector4_mul(struct vector4 *v, const union matrix44 *m) {$/;"	f
w	lualib-src/math3d.h	/^	float x,y,z,w;$/;"	m	struct:quaternion
w	lualib-src/math3d.h	/^	float x,y,z,w;$/;"	m	struct:vector4
width	lualib-src/pathfinding.c	/^	int width;$/;"	m	struct:map	file:
wrapKey 	lualib/base/luaext.lua	/^    wrapKey = function(val)$/;"	f
wrapVal 	lualib/base/luaext.lua	/^    wrapVal = function(val, level)$/;"	f
write 	lualib/base/syslog.lua	/^local function write (priority, fmt, ...)$/;"	f
writef 	lualib/base/syslog.lua	/^local function writef (priority, ...)$/;"	f
x	lualib-src/math3d.h	/^	float x,y,z,w;$/;"	m	struct:quaternion
x	lualib-src/math3d.h	/^	float x,y,z,w;$/;"	m	struct:vector4
x	lualib-src/math3d.h	/^	float x,y,z;$/;"	m	struct:vector3
x	lualib-src/math3d.h	/^	float x[16];$/;"	m	union:matrix44
x	lualib-src/pathfinding.c	/^	int x;$/;"	m	struct:pathnode	file:
x	lualib-src/pathfinding.c	/^	int x;$/;"	m	struct:route_coord	file:
y	lualib-src/math3d.h	/^	float x,y,z,w;$/;"	m	struct:quaternion
y	lualib-src/math3d.h	/^	float x,y,z,w;$/;"	m	struct:vector4
y	lualib-src/math3d.h	/^	float x,y,z;$/;"	m	struct:vector3
y	lualib-src/pathfinding.c	/^	int y;$/;"	m	struct:pathnode	file:
y	lualib-src/pathfinding.c	/^	int y;$/;"	m	struct:route_coord	file:
z	lualib-src/math3d.h	/^	float x,y,z,w;$/;"	m	struct:quaternion
z	lualib-src/math3d.h	/^	float x,y,z,w;$/;"	m	struct:vector4
z	lualib-src/math3d.h	/^	float x,y,z;$/;"	m	struct:vector3
